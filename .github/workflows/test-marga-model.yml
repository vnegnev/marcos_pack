name: test-marga-model

run-name: Compile MaRGA + run marcos_client unit tests

# run-name: ${{ github.actor }} is testing MaRCoS client

on: [push]

jobs:
  unittest:
    runs-on: ubuntu-latest
    steps:

    # - name: Install Python + packages
    #   uses: actions/setup-python
    #   with:
    #     python-version: '3.X'

    - name: Install Python packages
      run: |
        sudo apt-get install python3-numpy python3-matplotlib
        sudo apt-get install pip
        pip install msgpack

    - name: Install latest Verilator from source
      run: |

        # Prerequisites:
        sudo apt-get install git help2man perl python3 make autoconf g++ flex bison ccache
        # sudo apt-get install libgoogle-perftools-dev
        sudo apt-get install numactl perl-doc
        sudo apt-get install libfl2  # Ubuntu only (ignore if gives error)
        sudo apt-get install libfl-dev  # Ubuntu only (ignore if gives error)
        # sudo apt-get install zlibc zlib1g zlib1g-dev  # Ubuntu only (ignore if gives error)

        git clone https://github.com/verilator/verilator --depth=1  # Only first time

        # Every time you need to build:
        # unsetenv VERILATOR_ROOT  # For csh; ignore error if on bash
        unset VERILATOR_ROOT  # For bash
        cd verilator
        # git pull         # Make sure git repository is up-to-date
        # git tag          # See what versions exist
        #git checkout master      # Use development branch (e.g. recent bug fixes)
        #git checkout stable      # Use most recent stable release
        #git checkout v{version}  # Switch to specified release version

        autoconf         # Create ./configure script
        ./configure      # Configure and create Makefile
        # make -j `nproc`  # Build Verilator itself (if error, try just 'make')
        make -j4  # assume 4 cores
        sudo make install

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Build simulation model
      run: |
        cd marga
        mkdir build
        cd build
        cmake ../src
        make

    - name: Run unit tests
      run: |
        cd marcos_client
        # Make local_config.py for tests
        echo "ip_address=\"localhost\";port=11111;fpga_clk_freq_MHz=122.88;grad_board=\"gpa-fhdo\"" > local_config.py
        python test_marga_model.py
